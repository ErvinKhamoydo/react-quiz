{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","Axios/axios-quiz.js","redux/actions/actionTypes.js","redux/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","components/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","redux/actions/create.js","redux/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","reportWebVitals.js","redux/reducers/quiz.js","redux/reducers/create.js","redux/reducers/auth.js","redux/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","links","map","link","index","to","exact","activeclassname","active","onClose","label","this","close","isAuthenticated","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","Loader","Center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","error","fetchQuizSuccess","quizAnswerClick","answerId","dispatch","getState","answerState","activeQuestion","rightAnswerId","quizSetState","timeout","window","setTimeout","questionNumber","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","get","response","data","QuizList","name","fetchQuizes","renderQuizez","React","forEach","quizTitle","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","autoComplete","errorMessage","Select","options","option","createControl","config","validation","validate","isValid","required","trim","validateForm","formControls","isFormValid","control","hasOwnProperty","Auxiliary","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","hasQuizTitle","submitHandler","event","preventDefault","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","controlName","changeQuizTitleHandler","renderControls","target","selectChangeHandler","select","onSubmit","item","post","authSuccess","autoLogout","time","logout","localStorage","removeItem","Auth","email","errorMassage","password","minLength","loginHandler","registerHandler","onChangeHandler","validateControl","test","String","toLowerCase","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","autoLogin","routes","path","component","withRouter","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","immutable","Immutable","compose","store","createStore","rootReducer","applyMiddleware","reduxThunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dc1ff31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2VqLX\",\"close\":\"Drawer_close__3Dhbw\",\"active\":\"Drawer_active__1FeiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__37KZJ\",\"open\":\"MenuToggle_open__3FzF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__NTb81\",\"QuizWrapper\":\"Quiz_QuizWrapper__JVyRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3Wi7A\",\"Question\":\"ActiveQuiz_Question__3goxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2gN4B\",\"success\":\"AnswerItem_success__355l6\",\"error\":\"AnswerItem_error__1LIEB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__3mABP\",\"success\":\"FinishedQuiz_success__xX5jB\",\"error\":\"FinishedQuiz_error__2VmaV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__21Hgn\",\"error\":\"Button_error__1BTZY\",\"success\":\"Button_success__1dSQ8\",\"primary\":\"Button_primary__3DqCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3FFp0\",\"lds-ripple\":\"Loader_lds-ripple__38kkK\",\"Center\":\"Loader_Center__B0FVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2h4Mw\",\"invalid\":\"Input_invalid__8sf--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3_dSI\",\"AuthForm\":\"Auth_AuthForm__3pgtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3GUr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1LuED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2mNNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__PLUUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__13ko1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__20CLW\"};","import classes from './MenuToggle.module.css';\r\n\r\nconst MenuToggle = props => {\r\n   const cls = [\r\n      classes.MenuToggle,\r\n      'fa'\r\n   ];\r\n\r\n   if (props.isOpen) {\r\n      cls.push('fa-times', classes.open)\r\n   } else {\r\n      cls.push('fa-bars')\r\n   }\r\n\r\n   return (\r\n      <i \r\n         className={cls.join(' ')}\r\n         onClick={props.onToggle}\r\n      />\r\n   )\r\n}\r\n\r\nexport default MenuToggle","import classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>;\r\n\r\nexport default Backdrop","import {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './Drawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nclass Drawer extends Component {\r\n   renderLinks(links) {\r\n      return links.map((link, index) => {\r\n         return (\r\n            <li key={index}>\r\n               <NavLink \r\n                  to={link.to} \r\n                  exact={link.exact}\r\n                  activeclassname={classes.active}\r\n                  onClick={this.props.onClose}\r\n               >{link.label}</NavLink>\r\n            </li>\r\n         )\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const cls = [classes.Drawer];\r\n\r\n      if (!this.props.isOpen) {\r\n         cls.push(classes.close)\r\n      }\r\n\r\n      const links = [{\r\n            to: '/',\r\n            label: 'Список тестов',\r\n            exact: true\r\n         }\r\n      ];\r\n\r\n      if (this.props.isAuthenticated) {\r\n         links.push({\r\n            to: '/quiz-creator',\r\n            label: 'Создать тест',\r\n            exact: false\r\n         });\r\n\r\n         links.push({\r\n            to: '/logout',\r\n            label: 'Выйти',\r\n            exact: false\r\n         });\r\n      } else {\r\n         links.push({\r\n            to: '/auth',\r\n            label: 'Авторизация',\r\n            exact: false\r\n         })\r\n      }\r\n\r\n      return (\r\n         <>\r\n            <nav className={cls.join(' ')}>\r\n               <ul>\r\n                  {this.renderLinks(links)}\r\n               </ul>\r\n            </nav>\r\n            {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Drawer","import {Component} from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n   state = {\r\n      menu: false\r\n   }\r\n\r\n   toggleMenuHandler = () => {\r\n      this.setState({\r\n         menu: !this.state.menu\r\n      })\r\n   }\r\n\r\n   menuCloseHandler = () => {\r\n      this.setState({\r\n         menu: false\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className={classes['Layout']}>\r\n            <Drawer \r\n               isOpen={this.state.menu}\r\n               onClose={this.menuCloseHandler}\r\n               isAuthenticated={this.props.isAuthenticated}\r\n            />\r\n\r\n            <MenuToggle\r\n               onToggle={this.toggleMenuHandler}\r\n               isOpen={this.state.menu}\r\n            />\r\n\r\n            <main>\r\n               {this.props.children}\r\n            </main>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   return {\r\n      isAuthenticated: !!state.auth.token\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Layout)","import classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = props => {\r\n   const cls = [classes.AnswerItem]\r\n\r\n   if (props.state) {\r\n      cls.push(classes[props.state])\r\n   }\r\n\r\n   return (\r\n      <li \r\n         className={cls.join(' ')}\r\n         onClick={() => props.onAnswerClick(props.answer.id)}\r\n      >\r\n         {props.answer.text}\r\n      </li>\r\n   )\r\n};\r\n\r\nexport default AnswerItem","import classes from './AnswersList.module.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => {\r\n   return (\r\n   <ul className={classes.AnswersList}>\r\n      {props.answers.map((answer, index) => {\r\n         return (\r\n            <AnswerItem \r\n               key={index}\r\n               answer={answer}\r\n               onAnswerClick={props.onAnswerClick}\r\n               state={props.state ? props.state[answer.id] : null}\r\n            />\r\n         )\r\n      })}\r\n   </ul>\r\n)\r\n}\r\n\r\nexport default AnswersList;","import classes from './ActiveQuiz.module.css';\r\nimport AnswersList from './AnswersList/AnswersList';\r\n\r\nconst ActiveQuiz = props => (\r\n   <div className={classes.ActiveQuiz}>\r\n      <p className={classes.Question}>\r\n         <span>\r\n            <strong>{props.answerNumber}.</strong> &nbsp;\r\n            {props.question}\r\n         </span>\r\n         <small>{props.answerNumber} из {props.quizLength}</small>\r\n      </p>\r\n\r\n      <AnswersList\r\n         answers={props.answers}\r\n         onAnswerClick={props.onAnswerClick}\r\n         state={props.state}\r\n      />\r\n   </div>\r\n)\r\n\r\nexport default ActiveQuiz;","import classes from './Button.module.css';\r\n\r\nconst Button = props => {\r\n   const cls = [\r\n      classes.Button,\r\n      classes[props.type]\r\n   ]\r\n\r\n   return (\r\n      <button\r\n         onClick={props.onClick}\r\n         className={cls.join(' ')}\r\n         disabled={props.disabled}\r\n      >\r\n         {props.children}\r\n      </button>\r\n   )\r\n}\r\n\r\nexport default Button","import classes from './FinishedQuiz.module.css';\r\nimport Button from '../UI/Button/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst FinishedQuiz = props => {\r\n   const successCount = Object.keys(props.results).reduce((total, key) => {\r\n      if (props.results[key] === 'success') {\r\n         total++;\r\n      }\r\n      return total\r\n   }, 0)\r\n\r\n   return (\r\n      <div className={classes.FinishedQuiz}>\r\n         <ul>\r\n            {props.quiz.map((quizItem, index) => {\r\n               const cls = [\r\n                  'fa',\r\n                  props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                  classes[props.results[quizItem.id]]\r\n               ];\r\n\r\n               return (\r\n                  <li \r\n                     key={index}\r\n                  >\r\n                     <strong>{index + 1}.</strong>&nbsp;\r\n                     {quizItem.question}\r\n                     <i className={cls.join(' ')} />\r\n                  </li>\r\n               )\r\n            })}\r\n         </ul>\r\n\r\n         <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n         <div>\r\n            <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n            <Link to=\"/\" >\r\n               <Button type=\"success\">Перейти в список тестов</Button>\r\n            </Link>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default FinishedQuiz","import classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n   <div className={classes.Center}>\r\n      <div className={classes.Loader}>\r\n         <div />\r\n         <div />\r\n      </div>\r\n   </div>\r\n)\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n   baseURL: 'https://react-quiz-b2b15-default-rtdb.firebaseio.com/'\r\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import axios from '../../Axios/axios-quiz';\r\nimport {\r\n   FETCH_QUIZES_ERROR,\r\n   FETCH_QUIZES_START,\r\n   FETCH_QUIZES_SUCCESS,\r\n   FETCH_QUIZ_SUCCESS,\r\n   FINISH_QUIZ,\r\n   QUIZ_NEXT_QUESTION,\r\n   QUIZ_SET_STATE,\r\n   QUIZ_RETRY\r\n} from './actionTypes';\r\n\r\nexport function fetchQuizes() {\r\n   return async dispatch => {\r\n      dispatch(fetchQuizesStart())\r\n\r\n      try {\r\n         const response = await axios.get('/quizes.json');\r\n         const quizes = [];\r\n\r\n         Object.keys(response.data).forEach((key, index) => {\r\n            quizes.push({\r\n               id: key,\r\n               name: `${index + 1}. ${response.data[key][0].quizTitle}`\r\n            })\r\n         })\r\n\r\n         dispatch(fetchQuizesSuccess(quizes))\r\n      } catch (error) {\r\n         dispatch(fetchQuizesError(error))\r\n      }\r\n   }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n   return {\r\n      type: FETCH_QUIZES_START\r\n   }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n   return {\r\n      type: FETCH_QUIZES_SUCCESS,\r\n      quizes\r\n   }\r\n}\r\n\r\nexport function fetchQuizesError(error) {\r\n   return {\r\n      type: FETCH_QUIZES_ERROR,\r\n      error\r\n   }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n   return async dispatch => {\r\n      dispatch(fetchQuizesStart());\r\n\r\n      try {\r\n         const response = await axios.get(`/quizes/${quizId}.json`);\r\n         const quiz = response.data;\r\n\r\n         dispatch(fetchQuizSuccess(quiz));\r\n      } catch (error) {\r\n         dispatch(fetchQuizesError(error))\r\n      }\r\n   }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n   return {\r\n      type: FETCH_QUIZ_SUCCESS,\r\n      quiz\r\n   }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n   return (dispatch, getState) => {\r\n      const state = getState().quiz;\r\n\r\n      if (state.answerState) {\r\n         const key = Object.keys(state.answerState)[0];\r\n\r\n         if (state.answerState[key] === 'success') {\r\n            return\r\n         }\r\n      }\r\n\r\n      const question = state.quiz[state.activeQuestion];\r\n      const results = state.results;\r\n\r\n      if (question.rightAnswerId === answerId) {\r\n         if (!results[question.id]) {\r\n            results[question.id] = 'success';\r\n         }\r\n\r\n         dispatch(quizSetState({[answerId]: 'success'}, results));\r\n\r\n         const timeout = window.setTimeout(() => {\r\n            if (isQuizFinished(state)) {\r\n               dispatch(finishQuiz())\r\n            } else {\r\n               dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n            }\r\n\r\n            window.clearTimeout(timeout)\r\n         }, 1000)\r\n      } else {\r\n         results[question.id] = 'error';\r\n\r\n         dispatch(quizSetState({[answerId]: 'error'}, results));\r\n      }\r\n   }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n   return {\r\n      type: QUIZ_SET_STATE,\r\n      answerState,\r\n      results\r\n   }\r\n}\r\n\r\nexport function finishQuiz() {\r\n   return {\r\n      type: FINISH_QUIZ\r\n   }\r\n}\r\n\r\nexport function quizNextQuestion(questionNumber) {\r\n   return {\r\n      type: QUIZ_NEXT_QUESTION,\r\n      questionNumber\r\n   }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n   return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\nexport function retryQuiz() {\r\n   return {\r\n      type: QUIZ_RETRY\r\n   }\r\n}","import {Component} from 'react';\r\nimport classes from './Quiz.module.css';\r\nimport {connect} from 'react-redux';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../redux/actions/quiz';\r\n\r\nclass Quiz extends Component {  \r\n   componentDidMount() {\r\n      this.props.fetchQuizById(this.props.match.params.id);\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      this.props.retryQuiz()\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className={classes['Quiz']}>\r\n            <div className={classes.QuizWrapper}>\r\n               <h1>Ответьте на все вопросы</h1>\r\n\r\n               {\r\n                  this.props.loading || !this.props.quiz\r\n                  ? <Loader />\r\n                  : this.props.isFinished \r\n                     ? <FinishedQuiz\r\n                           results={this.props.results}\r\n                           quiz={this.props.quiz}\r\n                           onRetry={this.props.retryQuiz}\r\n                        /> \r\n                     : <ActiveQuiz \r\n                           answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                           question={this.props.quiz[this.props.activeQuestion].question}\r\n                           onAnswerClick={this.props.quizAnswerClick}\r\n                           quizLength={this.props.quiz.length}\r\n                           answerNumber={this.props.activeQuestion + 1}\r\n                           state={this.props.answerState}\r\n                        />\r\n               }\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   return {\r\n      isFinished: state.quiz.isFinished,\r\n      activeQuestion: state.quiz.activeQuestion,\r\n      answerState: state.quiz.answerState,\r\n      results: state.quiz.results,\r\n      quiz: state.quiz.quiz,\r\n      loading: state.quiz.loading\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n   return {\r\n      fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n      quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n      retryQuiz: () => dispatch(retryQuiz())\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React from 'react';\r\nimport classes from './QuizList.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport {fetchQuizes} from '../../redux/actions/quiz'\r\n\r\nclass QuizList extends React.Component {\r\n   renderQuizez() {\r\n      return this.props.quizes.map(quiz => {\r\n         return (\r\n            <li\r\n               key={quiz.id}\r\n            >\r\n               <NavLink\r\n                  to={`/quiz/${quiz.id}`}\r\n               >\r\n                  {quiz.name}\r\n               </NavLink>\r\n            </li>\r\n         )\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.fetchQuizes()\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className={classes.QuizList}>\r\n            <div>\r\n               <h1>Список тестов</h1>\r\n\r\n               <ul>\r\n                  {\r\n                  this.props.loading && this.props.quizes.length !== 0\r\n                     ? <Loader/> \r\n                     : this.renderQuizez()\r\n                  }\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   return {\r\n      quizes: state.quiz.quizes,\r\n      loading: state.quiz.loading\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      fetchQuizes: () => dispatch(fetchQuizes())\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n   return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n   const inputType = props.type || 'text';\r\n   const cls = [classes.Input];\r\n   const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n   if (isInvalid(props)) {\r\n      cls.push(classes.invalid)\r\n   }\r\n\r\n   return (\r\n      <div className={cls.join(' ')}>\r\n         <label htmlFor={htmlFor}>{props.label}</label>\r\n         <input \r\n            type={inputType}\r\n            id={htmlFor}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            autoComplete='true'\r\n         />\r\n\r\n         {\r\n            isInvalid(props)\r\n               ? <span>{props.errorMessage || 'Вы ввели неверное значение'}</span>\r\n               : null\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Input","import classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n   const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n   return (\r\n      <div className={classes.Select}>\r\n         <label htmlFor={htmlFor}>{props.label}</label>\r\n         <select\r\n            id={htmlFor}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n         >\r\n            {props.options.map((option, index) => {\r\n               return (\r\n                  <option\r\n                     value={option.value}\r\n                     key={option.value + index}\r\n                  >\r\n                     {option.text}\r\n                  </option>\r\n               )\r\n            })}\r\n         </select>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n   return {\r\n      ...config,\r\n      validation,\r\n      valid: !validation,\r\n      touched: false,\r\n      value: ''\r\n   }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n   if (!validation) {\r\n      return true\r\n   }\r\n\r\n   let isValid = true;\r\n\r\n   if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n   }\r\n\r\n   return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n   let isFormValid = true;\r\n\r\n   for (let control in formControls) {\r\n      if (formControls.hasOwnProperty(control)) {\r\n         isFormValid = formControls[control].valid && isFormValid;\r\n      }\r\n   }\r\n\r\n   return isFormValid\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport classes from './QuizCreator.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Select from '../../components/Select/Select';\r\nimport {createControl, validate, validateForm} from '../../form/formFramework';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport { createQuizQuestion, finishCreateQuiz } from '../../redux/actions/create';\r\n\r\nfunction createOptionControl(number) {\r\n   return createControl({\r\n      label: `Вариант ответа #${number}`,\r\n      errorMessage: 'Значение не может быть пустым',\r\n      id: number\r\n   }, {\r\n      required: true\r\n   })\r\n}\r\n\r\nfunction createFormControls() {\r\n   return {\r\n      question: createControl({  \r\n         label: 'Введите вопрос',\r\n         errorMessage: 'Вопрос не может быть пустым'\r\n      }, {\r\n         required: true\r\n      }),\r\n      option1: createOptionControl(1),\r\n      option2: createOptionControl(2),\r\n      option3: createOptionControl(3),\r\n      option4: createOptionControl(4)\r\n   }\r\n}\r\n\r\nclass QuizCreator extends React.Component {\r\n   state = {\r\n      hasQuizTitle: false,\r\n      quizTitle: createControl({\r\n         label: 'Введите название теста',\r\n         errorMessage: 'Название не может быть пустым'\r\n      }, {required: true}),\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n   }\r\n\r\n   submitHandler = event => event.preventDefault()\r\n\r\n   addQuestionHandler = event => {\r\n      event.preventDefault();\r\n\r\n      const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n      const questionItem = {\r\n         question: question.value,\r\n         id: this.props.quiz.length + 1, \r\n         rightAnswerId: this.state.rightAnswerId,\r\n         quizTitle: this.state.quizTitle.value,\r\n         answers: [\r\n            {\r\n               text: option1.value, \r\n               id: option1.id\r\n            },\r\n            {\r\n               text: option2.value, \r\n               id: option2.id\r\n            },\r\n            {\r\n               text: option3.value, \r\n               id: option3.id\r\n            },\r\n            {\r\n               text: option4.value, \r\n               id: option4.id\r\n            }\r\n         ]\r\n      };\r\n\r\n      this.props.createQuizQuestion(questionItem)\r\n\r\n      this.setState({\r\n         isFormValid: false,\r\n         rightAnswerId: 1,\r\n         formControls: createFormControls()\r\n      })\r\n   }\r\n\r\n   createQuizHandler = event => {\r\n      event.preventDefault();\r\n      \r\n      this.props.finishCreateQuiz()\r\n      \r\n      this.setState({\r\n         hasQuizTitle: false,\r\n         quizTitle: createControl({\r\n            label: 'Введите название теста',\r\n            errorMessage: 'Название не может быть пустым'\r\n         }, {required: true}),\r\n         isFormValid: false,\r\n         rightAnswerId: 1,\r\n         formControls: createFormControls()\r\n      })\r\n\r\n\r\n      // axios.post('https://react-quiz-b2b15-default-rtdb.firebaseio.com/quizes.json', this.state.quiz)\r\n      //    .then(response => {\r\n      //       console.log(response);\r\n      //    })\r\n      //    .catch(error => {\r\n      //       console.log(error);\r\n      //    })\r\n   }\r\n\r\n   changeHandler = (value, controlName) => {\r\n      const formControls = {...this.state.formControls};\r\n      const control = {...formControls[controlName]};\r\n\r\n      control.touched = true;\r\n      control.value = value;\r\n      control.valid = validate(control.value, control.validation);\r\n\r\n      formControls[controlName] = control;\r\n\r\n      this.setState({\r\n         formControls,\r\n         isFormValid: validateForm(formControls)\r\n      })\r\n   }\r\n\r\n   changeQuizTitleHandler = value => {\r\n      const quizTitle = {...this.state.quizTitle};\r\n\r\n      quizTitle.touched = true;\r\n      quizTitle.value = value;\r\n      quizTitle.valid = validate(quizTitle.value, quizTitle.validation);\r\n\r\n      this.setState({\r\n         quizTitle\r\n      })\r\n   }\r\n\r\n   renderControls = () => {\r\n      return Object.keys(this.state.formControls).map((controlName, index) => {\r\n         const control = this.state.formControls[controlName]\r\n\r\n         return (\r\n            <Auxiliary key={controlName + index}>\r\n               <Input\r\n                  key={index}\r\n                  label={control.label}\r\n                  value={control.value}\r\n                  valid={control.valid}\r\n                  shouldValidate={!!control.validation}\r\n                  touched={control.touched}\r\n                  errorMessage={control.errorMessage}\r\n                  onChange={event => this.changeHandler(event.target.value, controlName)}\r\n               />\r\n\r\n               {index === 0 ? <hr /> : null}\r\n            </Auxiliary>\r\n         )\r\n      })\r\n   }\r\n\r\n   selectChangeHandler = event => {\r\n      this.setState({\r\n         rightAnswerId: +event.target.value\r\n      })\r\n   }\r\n\r\n   select = () => {\r\n      return (\r\n         <Select \r\n            label=\"Выбирите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options = {\r\n               [\r\n                  {\r\n                     text: 1,\r\n                     value: 1\r\n                  }, \r\n                  {\r\n                     text: 2,\r\n                     value: 2\r\n                  }, \r\n                  {\r\n                     text: 3,\r\n                     value: 3\r\n                  }, \r\n                  {\r\n                     text: 4,\r\n                     value: 4\r\n                  }\r\n               ]\r\n            }\r\n         />\r\n      )\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className={classes.QuizCreator}>\r\n            <div>\r\n               <h1>{this.state.hasQuizTitle ? this.state.quizTitle.value : 'Создание теста'}</h1>\r\n                  \r\n                  {\r\n                     this.state.quizTitle && this.state.hasQuizTitle\r\n                     ? (\r\n                        <form onSubmit={this.submitHandler}>\r\n                           {this.renderControls()}\r\n                           \r\n                           {this.select()}\r\n\r\n                           <Button\r\n                              type=\"primary\"\r\n                              onClick={this.addQuestionHandler}\r\n                              disabled={!this.state.isFormValid}\r\n                           >\r\n                              Добавить вопрос\r\n                           </Button>\r\n\r\n                           <Button\r\n                              type=\"success\"\r\n                              onClick={this.createQuizHandler}\r\n                              disabled={this.props.quiz.length === 0}\r\n                           >\r\n                              Создать тест\r\n                           </Button>\r\n                        </form>\r\n                     )\r\n                     : (\r\n                        <>\r\n                           <Input\r\n                              label={this.state.quizTitle.label}\r\n                              value={this.state.quizTitle.value}\r\n                              valid={this.state.quizTitle.valid}\r\n                              shouldValidate={!!this.state.quizTitle.validation}\r\n                              touched={this.state.quizTitle.touched}\r\n                              errorMessage={this.state.quizTitle.errorMessage}\r\n                              onChange={event => this.changeQuizTitleHandler(event.target.value)}\r\n                           />\r\n\r\n                           <Button\r\n                              type=\"primary\"\r\n                              onClick={() => this.setState({hasQuizTitle: true})}\r\n                              disabled={!this.state.quizTitle.valid}\r\n                           >\r\n                              Продолжить создание теста\r\n                           </Button>\r\n                        </>\r\n                     )\r\n                  }\r\n\r\n                  \r\n               \r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n   return {\r\n      quiz: state.create.quiz\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n      finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import axios from '../../Axios/axios-quiz'\r\nimport { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"./actionTypes\";\r\n\r\nexport function createQuizQuestion(item) {\r\n   return {\r\n      type: CREATE_QUIZ_QUESTION,\r\n      item\r\n   }\r\n}\r\nexport function finishCreateQuiz() {\r\n   return async (dispatch, getState) => {\r\n      await axios.post('/quizes.json', getState().create.quiz)\r\n\r\n      dispatch(resetQuizCreation())\r\n   }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n   return {\r\n      type: RESET_QUIZ_CREATION\r\n   }\r\n}","import axios from 'axios';\r\nimport {\r\n   AUTH_LOGOUT,\r\n   AUTH_SUCCESS\r\n} from './actionTypes';\r\n\r\nexport function auth(email, password, isLogin) {\r\n   return async dispatch => {\r\n      const authData = {\r\n         email,\r\n         password,\r\n         returnSecureToken: true\r\n      }\r\n\r\n      // link to sign up\r\n      let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC-SMAGirOPJQm5dQ4SOPBr-TTKTng_2J4'\r\n\r\n      if (isLogin) {\r\n         // linkn to sign in\r\n         url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC-SMAGirOPJQm5dQ4SOPBr-TTKTng_2J4'\r\n      }\r\n\r\n      const response = await axios.post(url, authData);\r\n      const data = response.data;\r\n\r\n      const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n      localStorage.setItem('token', data.idToken);\r\n      localStorage.setItem('userId', data.localId);\r\n      localStorage.setItem('expirationDate', expirationDate);\r\n\r\n      dispatch(authSuccess(data.idToken));\r\n      dispatch(autoLogout(data.expiresIn))\r\n   }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n   return {\r\n      type: AUTH_SUCCESS,\r\n      token\r\n   }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n   return dispatch => {\r\n      setTimeout(() => {\r\n         dispatch(logout())\r\n      }, time * 1000)\r\n   }\r\n}\r\n\r\nexport function logout() {\r\n   localStorage.removeItem('token');\r\n   localStorage.removeItem('userId');\r\n   localStorage.removeItem('expirationDate');\r\n   return {\r\n      type: AUTH_LOGOUT\r\n   }\r\n}\r\n\r\nexport function autoLogin() {\r\n   return dispatch => {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n         dispatch(logout())\r\n      } else {\r\n         const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n\r\n         if (expirationDate <= new Date()) {\r\n            dispatch(logout())\r\n         } else {\r\n            dispatch(authSuccess(token));\r\n            dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n         }\r\n      }\r\n   }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport { auth } from '../../redux/actions/auth'\r\n\r\nfunction validateEmail(email) {\r\n   const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n   return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends React.Component {\r\n   state = {\r\n      isFormValid: false,\r\n      formControls: {\r\n         email: {\r\n            value: '',\r\n            type: 'email',\r\n            label: 'Email',\r\n            errorMassage: 'Введите корректный email',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n               required: true,\r\n               email: true\r\n            }\r\n         },\r\n         password: {\r\n            value: '',\r\n            type: 'password',\r\n            label: 'Password',\r\n            errorMassage: 'Введите корректный password',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n               required: true,\r\n               minLength: 8\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   loginHandler = () => {\r\n      this.props.auth( \r\n         this.state.formControls.email.value,\r\n         this.state.formControls.password.value,\r\n         true\r\n      )\r\n   }\r\n\r\n   registerHandler = () => {\r\n      this.props.auth( \r\n         this.state.formControls.email.value,\r\n         this.state.formControls.password.value,\r\n         false\r\n      )\r\n   }\r\n\r\n   submitHandler = event => {\r\n      event.preventDefault();\r\n   }\r\n\r\n   validateControl(value, validation) {\r\n      if (!validation) {\r\n         return true\r\n      }\r\n\r\n      let isValid = true;\r\n      \r\n      if (validation.required) {\r\n         isValid = value.trim() !== '' && isValid\r\n      }\r\n\r\n      if (validation.email) {\r\n         isValid = validateEmail(value) && isValid\r\n      }\r\n\r\n      if (validation.minLength) {\r\n         isValid = value.length >= validation.minLength && isValid\r\n      }\r\n\r\n      return isValid\r\n   }\r\n\r\n   onChangeHandler = (event, controlName) => {\r\n      const formControls = {...this.state.formControls};\r\n      const control = {...formControls[controlName]};\r\n\r\n      control.value = event.target.value;\r\n      control.touched = true;\r\n      control.valid = this.validateControl(control.value, control.validation);\r\n\r\n      formControls[controlName] = control;\r\n\r\n      let isFormValid = true;\r\n\r\n      Object.keys(formControls).forEach(name => {\r\n         isFormValid = formControls[name].valid && isFormValid\r\n      })\r\n\r\n      this.setState({\r\n         formControls,\r\n         isFormValid\r\n      })\r\n   }\r\n\r\n   renderInputs() {\r\n      return Object.keys(this.state.formControls).map((controlName, index) => {\r\n         const control = this.state.formControls[controlName]\r\n         return (\r\n            <Input \r\n               key={controlName + index}\r\n               type={control.type}\r\n               label={control.label}\r\n               value={control.value}\r\n               valid={control.valid}\r\n               touched={control.touched}\r\n               errorMassage={control.errorMassage}\r\n               shouldValidate={!!control.validation}\r\n               onChange={event => this.onChangeHandler(event, controlName)}\r\n            />\r\n         )\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className={classes.Auth}>\r\n            <div>\r\n               <h1>Авторизация</h1>\r\n\r\n               <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                  \r\n                  {this.renderInputs()}\r\n\r\n                  <Button \r\n                     type=\"success\" \r\n                     onClick={this.loginHandler}\r\n                     disabled={!this.state.isFormValid}\r\n                  >\r\n                     LogIn\r\n                  </Button>\r\n\r\n                  <Button \r\n                     type=\"primary\" \r\n                     onClick={this.registerHandler}\r\n                     disabled={!this.state.isFormValid}\r\n                  >\r\n                     SignUp\r\n                  </Button>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {logout} from '../../redux/actions/auth';\r\n\r\nclass Logout extends React.Component {\r\n   componentDidMount() {\r\n      this.props.logout()\r\n   }\r\n\r\n   render() {\r\n      return <Redirect to={'/'} />\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      logout: () => dispatch(logout())\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Quiz from './containers/Quiz/Quiz';\nimport QuizList from './containers/QuizList/QuizList';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './components/Logout/Logout';\nimport { autoLogin } from './redux/actions/auth';\n\nclass App extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.autoLogin()\n\t}\n\n\trender() {\n\t\tlet routes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/auth\" component={Auth} />\n\t\t\t\t<Route path=\"/quiz/:id\" component={Quiz} />\n\t\t\t\t<Route path=\"/\" exact component={QuizList} />\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Switch>\n\t\t) \n\n\t\tif (this.props.isAuthenticated) {\n\t\t\troutes = (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/quiz-creator\" component={QuizCreator} />\n\t\t\t\t\t<Route path=\"/quiz/:id\" component={Quiz} />\n\t\t\t\t\t<Route path=\"/logout\" component={Logout} />\n\t\t\t\t\t<Route path=\"/\" exact component={QuizList} />\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t{routes}\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tisAuthenticated: !!state.auth.token\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tautoLogin: () => dispatch(autoLogin())\n\t}\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FETCH_QUIZES_ERROR, FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZ_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_SET_STATE, QUIZ_RETRY } from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n   quizes: [],\r\n   loading: false,\r\n   error: null,\r\n   isFinished: false,\r\n   activeQuestion: 0,\r\n   answerState: null,\r\n   results: {},\r\n   quiz: null \r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case FETCH_QUIZES_START:\r\n         return {\r\n            ...state, \r\n            loading: true\r\n         }\r\n      case FETCH_QUIZES_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            quizes: action.quizes\r\n         }\r\n      case FETCH_QUIZES_ERROR:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.error\r\n         }\r\n      case FETCH_QUIZ_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            quiz: action.quiz\r\n         }\r\n      case QUIZ_SET_STATE:\r\n         return {\r\n            ...state,\r\n            answerState: action.answerState,\r\n            results: action.results\r\n         }\r\n      case FINISH_QUIZ: \r\n         return {\r\n            ...state,\r\n            isFinished: true\r\n         }\r\n      case QUIZ_NEXT_QUESTION: \r\n         return {\r\n            ...state,\r\n            activeQuestion: action.questionNumber,\r\n            answerState: null\r\n         }\r\n      case QUIZ_RETRY:\r\n         return {\r\n            ...state,\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n            isFinished: false,\r\n            results: {}\r\n         }\r\n      default: \r\n         return state\r\n   }\r\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n   quiz: [],\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case CREATE_QUIZ_QUESTION:\r\n         return {\r\n            ...state,\r\n            quiz: [...state.quiz, action.item]\r\n         }\r\n      case RESET_QUIZ_CREATION:\r\n         return {\r\n            ...state,\r\n            quiz: []\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n   token: null\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n   switch(action.type) { \r\n      case AUTH_SUCCESS:\r\n         return {\r\n            ...state,\r\n            token: action.token\r\n         }\r\n      case AUTH_LOGOUT:\r\n         return {\r\n            ...state,\r\n            token: null\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}","import {combineReducers} from 'redux';\r\nimport quizReducer from './quiz';\r\nimport createReducer from './create';\r\nimport authReducer from './auth';\r\n\r\nexport default combineReducers({\r\n   quiz: quizReducer,\r\n   create: createReducer,\r\n   auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './redux/reducers/rootReducer';\nimport Immutable from 'immutable';\n\nconst composeEnhancers = typeof window === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ !== 'undefined' ?\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n\t\tserialize: {\n\t\t\timmutable: Immutable\n\t\t}\n\t}) : compose;\n\nconst store = createStore(\n  rootReducer, \n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}